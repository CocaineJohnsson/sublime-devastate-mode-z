{
    "name": "Mode Z",
    "description":"A minimalist colour scheme that seeks to minimize distractions by focusing on what really matters and eliminating excessive use of colour",
    "author": "Andreas \"Cocaine Johnsson\" Bj√∂rkman",
    "variables":
    {
        "true_black"    :   "#000000",
        "black"         :   "#080808",
        "medium_black"  :   "#161616",
        "dark_grey"     :   "#3b3a32",
        "medium_grey"   :   "#515151",
        "grey"          :   "#6d6d6d",
        "light_grey"    :   "#a0a0a0",
        "dark_white"    :   "#e0e0e0",
        "true_white"    :   "#f5f5f5",

        "ui_red"        :   "#ff7e7e",
        "alert_red"     :   "#ff2222",
        "candy_red"     :   "#f92649",
        "dark_red"      :   "#b90619",
        "moderate_pink" :   "#d66990",
        "magenta"       :   "#ff00ff",

        "aqua"          :   "#3cdfb5",
        "blue"          :   "#66a9ec",
        "cyan"          :   "#30a5a3",
        "soft_cyan"     :   "#66d9ef",
        "green"         :   "#39e600",
        "light_green"   :   "#a6e22e",
        "dark_green"    :   "#008540",

        "light_beige"   :   "#fce8cb",
        "beige"         :   "#dcc8ab",
        "dark_beige"    :   "#cdb087",
        "soft_orange"   :   "#fab85a"
    },

    "globals":
    {
        "foreground"                :   "var(light_beige)",
        "background"                :   "var(medium_black)",
        "accent"                    :   "var(aqua)",
        "gutter_foreground"         :   "var(dark_white)",
        "gutter"                    :   "var(black)",
        "invisibles"                :   "var(ui_red)",
        "selection"                 :   "var(medium_grey)",
        "selection_border"          :   "var(medium_grey)",
        "selection_border_width"    :   "3",
        "inactive_selection"        :   "var(dark_grey)",
        "selection_corner_style"    :   "cut",
        "selection_corner_radius"   :   "4",
        "highlight"                 :   "color(var(true_white) alpha(0.3))",
        "find_highlight"            :   "var(soft_orange)",
        "modifier"                  :   "var(dark_white)",

        "caret"                     :   "var(ui_red)",
        "block_caret"               :   "var(ui_red)",
        "line_highlight"            :   "color(var(dark_grey) alpha(0.5))",
        "misspelling"               :   "var(alert_red)",
        "fold_marker"               :   "var(aqua)",
        "minimap_border"            :   "var(aqua)",
        "line_diff_width"           :   "5",
        "line_diff_added"           :   "var(soft_orange)",
        "line_diff_modified"        :   "var(green)",
        "line_diff_deleted"         :   "var(alert_red)",

        "guide"                     :   "var(dark_grey)",
        "active_guide"              :   "var(ui_red)",
        "stack_guide"               :   "var(dark_grey)",
        "brackets_options"          :   "underline foreground bold",
        "brackets_foreground"       :   "color(var(blue) alpha(1))",
        "tags_options"              :   "underline",
        "shadow"                    :   "var(true_black)",
        "shadow_width"              :   "8"
    },

    "rules":
    [
        {
            "name"      : "invalid",
            "scope"     : "invalid",
            "foreground": "var(alert_red)",
            "background": "var(aqua)",
            "font_style": "italic, squiggly_underline, bold, glow"
        },
        {
            "name"      : "comments",
            "scope"     : "comment",
            "foreground": "var(light_grey)",
            "font_style": "italic"
        },
        {   //works for declared namespaces but not instances of them being used, why?
            "name"      : "namespaces",
            "scope"     : "entity.name.namespace, entity.name.interface, entity.name.impl, entity.name.class.forward-decl",
            "foreground": "var(blue)"
        },
        {
            "name"      : "storage types",
            "scope"     : "storage, support.type, support.class",
            "foreground": "var(dark_white)",
            "font_style": "bold"
        },
        {
            "name"      : "storage modifier",
            "scope"     : "storage.modifier",
            "foreground": "var(dark_white)",
            "font_style": "bold"
        },
        {
            "name"      : "string literals",
            "scope"     : "string",
            "foreground": "var(dark_beige)"
        },
        {
            "name"      : "variables",
            "scope"     : "variable, punctuation.definition.variable, definition.variable",
            "foreground": ["color(var(candy_red) alpha(.90))", "color(var(light_green) alpha(.90))"]
        },
        {
            "name"      : "function parameter",
            "scope"     : "variable.parameter",
            "foreground": ["color(var(green) alpha(1))", "color(var(moderate_pink) alpha(1))"],
            "font_style": "italic"
        },
        {
            "name"      : "user-defined constants",
            "scope"     : "constant.character, constant.other, constant.character.escape, constant.other.placeholder",
            "foreground": "color(var(moderate_pink) alpha(1.0))"
        },
        {
            "name"      : "numbers",
            "scope"     : "constant.numeric",
            "foreground": "var(soft_orange)"
        },
        {
            "name"      : "built-in constants",
            "scope"     : "constant.language",
            "foreground": "color(var(light_grey) blend(var(dark_beige) 65%)"
        },
        {
            "name"      : "classes, structs",
            "scope"     : "support.class, support.module, entity.name.class, entity.name.struct, entity.other.inherited-class, storage.type.class, keyword.declaration.class, storage.type.struct, keyword.declaration.struct",
            "font_style": "none"
        },
        {
            "name"      : "enum, union",
            "scope"     : "storage.type.enum, keyword.declaration.enum, entity.name.union, entity.name.enum, storage.type.enum, keyword.declaration.enum, storage.type.union, keyword.declaration.union, storage.type.trait, keyword.declaration.trait, storage.type.interface, keyword.declaration.interface,  storage.type.impl keyword.declaration.impl, storage.type keyword.declaration.type "
        },
        {
            "name"      : "function name",
            "scope"     : "entity.name.function",
            "foreground": "var(blue)",
            "font_style": "italic"
        },
        {
            "name"      : "functions",
            "scope"     : "variable.function, support.function",
            "foreground": "color(var(soft_cyan) alpha(1))",
            "font_style": "italic"
        },
        {
            "name"      : "control flow",
            "scope"     : "keyword",
            "foreground": "var(blue)"
        },
        {
            "name"      : "language literal",
            "scope"     : "variable.language, variable.language.super, variable.language.this, variable.language.self",
            "foreground": "var(green)"
        },
        {
            "name"      : "curly braces",
            "scope"     : "punctuation.section.block.begin, punctuation.section.block.end, punctuation.section.braces.begin, punctuation.section.braces.end",
            "foreground": "var(grey)",
            "font_style": "bold"
        },
        {
            "name"      : "parentheses contents",
            "scope"     : "meta.group, meta.parens",
            "foreground": "var(light_beige)",
            "font_style": "italic"
        },
        {
            "name"      : "parentheses",
            "scope"     : "punctuation.section.group.begin, punctuation.section.group.end, punctuation.section.parens.begin, punctuation.section.parens.end",
            "foreground": "var(dark_red)",
            "font_style": "bold"
        },
        {
            "name"      : "square brackets",
            "scope"     : "punctuation.section.brackets.begin, punctuation.section.brackets.end, punctuation.definition.generic.begin, punctuation.definition.generic.end",
            "foreground": "var(dark_red)"
        },
        {
            "name"      : "punctuation",
            "scope"     : "punctuation.definition.string, punctuation.definition.variable, punctuation.definition.string, punctuation.definition.parameters, punctuation.definition.string, punctuation.definition.array, punctuation.accessor",
            "foreground": "var(candy_red)"
        },
        {
            "name"      : "misc. punctuation",
            "scope"     : "punctuation.separator, punctuation.terminator, punctuation.separator.continuation",
            "foreground": "var(soft_cyan)"
        },
        {
            "name"      : "operators",
            "scope"     : "keyword.operator",
            "foreground": "color(var(cyan) alpha(1))",
        },
        {
            "name"      : "preprocessor directives",
            "scope"     : "keyword.control.import, preprocessor.other, meta.assumed-macro",
            "foreground": "color(var(dark_white) alpha(0.8))",
            "font_style": "italic"
        },
        {
            "name"      : "diff.deleted",
            "scope"     : "markup.deleted",
            "foreground": "var(alert_red)"
        },
        {
            "name"      : "diff.inserted",
            "scope"     : "markup.inserted",
            "foreground": "var(green)"
        },
        {
            "name"      : "diff.changed",
            "scope"     : "markup.changed",
            "foreground": "var(soft_orange)"
        },
    ]
}
